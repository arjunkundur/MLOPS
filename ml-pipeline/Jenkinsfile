pipeline {
    agent any

    environment {
        AWS_REGION = 'ap-south-1'
        SAGEMAKER_PROJECT = 'my-sagemaker-aws-jenkins-project1'
        SAGEMAKER_ROLE = 'arn:aws:iam::975050337104:role/service-role/AmazonSageMaker-ExecutionRole-20250311T162664'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/arjunkundur/MLOPS.git']]])
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                ls -l && pwd
                pip3 install -r ml-pipeline/sagemaker_scripts/requirements.txt
                '''
            }
        }

        stage('Run SageMaker Training Job') {
            steps {
                script {
                    def trainingJobName = sh(script: "python3 ml-pipeline/scripts/run_training.py --project $SAGEMAKER_PROJECT --region $AWS_REGION --role $SAGEMAKER_ROLE", returnStdout: true).trim()
                    echo "Triggered SageMaker Training Job: ${trainingJobName}"
                    
                    // Poll the SageMaker training job status every 20 seconds
                    timeout(time: 60, unit: 'MINUTES') {  // Set a timeout for the wait
                        waitUntil {
                            def status = sh(script: "aws sagemaker describe-training-job --region $AWS_REGION --training-job-name ${trainingJobName} --query 'TrainingJobStatus' --output text", returnStdout: true).trim()
                            echo "Current SageMaker Training Job Status: ${status}"
                            if (status == "Completed" || status == "Failed" || status == "Stopped") {
                                return true
                            }
                            sleep 30 // Wait for 20 seconds before checking again
                            return false
                        }
                    }

                    // Check the final status and fail the pipeline if it's not successful
                    def finalStatus = sh(script: "aws sagemaker describe-training-job --region $AWS_REGION --training-job-name ${trainingJobName} --query 'TrainingJobStatus' --output text", returnStdout: true).trim()
                    if (finalStatus != "Completed") {
                        error "SageMaker Training Job failed with status: ${finalStatus}"
                    }
                }
            }
        }

        stage('Deploy Model') {
            steps {
                sh 'python3 ml-pipeline/scripts/deploy_model.py --project $SAGEMAKER_PROJECT --region $AWS_REGION'
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}
